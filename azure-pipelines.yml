trigger:
  paths:
    exclude:
    - rlberry/_version.py
    - docs

pr:
  paths:
    exclude:
    - rlberry/_version.py
    - docs

jobs:

- job: 'checkPrLabel'
  continueOnError: false
  pool:
    vmImage: ubuntu-22.04
  steps:
  - bash: |
     echo "Looking for label at https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels"
     if curl -s "https://api.github.com/repos/$BUILD_REPOSITORY_ID/issues/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/labels" | grep '"name": "ready for review"'
     then
       echo "##vso[task.setvariable variable=prHasCILabel;isOutput=true]true"
       echo "[INFO] ready for review label found!"
     fi
    displayName: Check for CI label build on PR
    condition: eq(variables['Build.Reason'], 'PullRequest') # only run step if it is a PR
    name: checkPrLabel

- job: 'linux'
  dependsOn: checkPrLabel
  # Condition: have ready for review label or on the main branch.
  condition: or(in(variables['Build.SourceBranch'], 'refs/heads/main'), eq(dependencies.checkPrLabel.outputs['checkPrLabel.prHasCILabel'], true))
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python39:
        python.version: '3.9'
  variables:
    NUMBA_DISABLE_JIT: "1"

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
      sudo apt install libglu1-mesa
    displayName: 'Install dependencies'
  - script: |
      set -xe
      pip install -e .
    displayName: 'Install rlberry'


  - script: |
      set -xe
      pip install pytest==7.0.1 pytest-azurepipelines pytest-cov pytest-xvfb pytest-xprocess
      # run doctests in the documentation
      # TODO: use following line for doctest ?
      pytest docs/*rst || echo "Ignoring exit status"
      pytest --import-mode=importlib --cov=rlberry --cov-report xml rlberry
    displayName: 'Test and coverage'
  - script: |
      curl -Os https://uploader.codecov.io/latest/linux/codecov
      chmod +x codecov
      ./codecov
    displayName: 'Upload to codecov.io'


- job: 'macOS'
  dependsOn: checkPrLabel
  condition: or(in(variables['Build.SourceBranch'], 'refs/heads/main'), eq(dependencies.checkPrLabel.outputs['checkPrLabel.prHasCILabel'], true))

  pool:
    vmImage: 'macOS-12'
  strategy:
    matrix:
      Python39:
        python.version: '3.9'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      set -xe
      pip install -e .
    displayName: 'Install rlberry'

  - script: |
      pip install pytest==7.0.1 pytest-azurepipelines pytest-xvfb
      pytest --ignore=rlberry/network
    displayName: 'pytest'

- job: 'windows'
  dependsOn: checkPrLabel
  condition: or(in(variables['Build.SourceBranch'], 'refs/heads/main'), eq(dependencies.checkPrLabel.outputs['checkPrLabel.prHasCILabel'], true))
  pool:
    vmImage: 'windows-2022'
  strategy:
    matrix:
      Python39:
        python.version: '3.9'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip wheel . -w dist\
      pip install --pre --no-index --find-links dist\ rlberry
    displayName: 'Install rlberry'

  - script: |
      pip install pytest==7.0.1 pytest-azurepipelines pytest-xvfb
      pytest --ignore=rlberry/network
    displayName: 'pytest'
